<?php

namespace DemigodCode\BootstrapEmail\Converter;

class Spacing extends AbstractConverter
{
    protected $xPathsOptions = [
        '//*[contains(concat(" ", @class, " "), " space-y-")]' => 'spacing',
    ];

    protected function getTemplate(string $identifier): string
    {
        return '';
    }

    protected function extractParentCssClasses(\DOMElement $element, string $identifier): string
    {
        return parent::extractParentCssClasses($element, $identifier); // TODO: Change the autogenerated stub
    }

    public function buildReplacementHtml(\DOMElement $element, string $identifier): string
    {
        $spacing = [];
        preg_match('/space-y-((lg-)?\d+)/', $element->getAttribute('class'), $needTopClass);

        $doc = new \DOMDocument('1.0', 'UTF-8');
        $doc->loadHTML(mb_convert_encoding('<html><div>'.$element->ownerDocument->saveHTML($element).'<div></html>', 'HTML-ENTITIES', 'UTF-8'));
        $xPath = new \DOMXPath($doc);
        foreach($xPath->query('./*[position() < last()] | ./tbody/tr/td/*[position() < last()]') as $childElement) {
            if (preg_match('/m[by]{1}-(lg-)?\d+/', $childElement->getAttribute('class'))) {
                continue;
            }
            $childElement->setAttribute('class', $childElement->getAttribute('class') . ' mb-' . $needTopClass[1]);
        }

        return $this->getInnerHtml($doc->getElementsByTagName('body')[0]);
    }

}